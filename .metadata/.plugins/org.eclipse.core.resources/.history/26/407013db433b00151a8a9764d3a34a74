package de.heinfricke.countriesmapper.reader;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.SortedSet;
import java.util.TreeSet;
import de.heinfricke.countriesmapper.country.*;

public class CountriesReader
{	
	public SortedSet<String> readCountries(String userPath) throws FileNotFoundException, IOException
	{
		String path = userPath;
		System.out.println("Your path to .txt file is: " + path);			
		
		SortedSet<String> namesOfCountries = new TreeSet<String>();
		
		File file = new File(path);
		String line;
		
		BufferedReader bufferedReader = null;
		try {
			FileReader fileReader = new FileReader(file);
			bufferedReader = new BufferedReader(fileReader);
			while((line = bufferedReader.readLine()) != null)
			{				
				if(!line.isEmpty())
				{
					namesOfCountries.add(line);
				}
			}
		} 
		finally 
		{
			if (bufferedReader != null) 
			{
				bufferedReader.close();
			}
		}
		return namesOfCountries;
	}
	
	
	
	public List<Country> readCountries2(String userPath) throws FileNotFoundException, IOException
	{
		String path = userPath;
		System.out.println("Your path to .txt file is: " + path);			
		
		List<Country> namesOfCountries = new ArrayList<Country>();
		
		File file = new File(path);
		String line;
		
		BufferedReader bufferedReader = null;
		try {
			FileReader fileReader = new FileReader(file);
			bufferedReader = new BufferedReader(fileReader);
			while((line = bufferedReader.readLine()) != null)
			{				
				if(!line.isEmpty())
				{
					Country test = new Country(line);
					namesOfCountries.add(test);
				}
			}
		} 
		finally 
		{
			if (bufferedReader != null) 
			{
				bufferedReader.close();
			}
		}
		
		TreeSet<Country> treeSet = new TreeSet<Country>();
		treeSet.addAll(namesOfCountries);
		for (Country c : treeSet)
		{
			System.out.println(c.getName());
		}
		
		
		//System.out.println(namesOfCountries.first());
		return namesOfCountries;
	}
	
}
